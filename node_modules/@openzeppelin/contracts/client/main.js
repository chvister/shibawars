Moralis.initialize("VENnpo7F7P2IjpTpzdSxwbzbJ8XvfsZg8r8P01yC"); // Application id from moralis.io
Moralis.serverURL = "https://xmhlcuysesnk.moralis.io:2053/server"; //Server url from moralis.io

const CONTRACT_ADRESS = "0xfD0f34e840afbC7E2a7Aae362B19b73D8e075EE1";

async function init() {
    try {
        let user = Moralis.User.current();
        if(!user){
            $("#login_button").click(async () => {
                user = await Moralis.Web3.authenticate();
            })
        }
        renderGame();
    } catch (error) {
        console.log(error);
    }
}

async function renderGame(){
    $("#game").show();
    $("#shibas-row").html("");

    window.web3 = await Moralis.Web3.enable();
    let contract = await getContract();
    let userShibas = await contract.methods.getUserTokens(ethereum.selectedAddress).call({from: ethereum.selectedAddress});
    if(Array.length == 0){
        return;
    }
    userShibas.forEach(async (shibaId) => {
        let data = await contract.methods.getTokenDetails(shibaId).call({from: ethereum.selectedAddress});
        renderShiba(shibaId, data);
    });

    $("#login_button").hide();
}

function renderShiba(id, data){
    let card = 
    `<div class="col-md-4 card id="pet-${id}">
    <img class="card-img-top" src="token-${data.tokenId}.png" id="bojar-img">
    <div class="card-body">
        <div>Id: <span class="shiba-id">${id}</span></div>
        <div>Name: <span class="shiba-name">${data.name}</span></div>
        <div>Description: <span class="shiba-description">${data.description}</span></div>
        <div>Level: <span class="shiba-level">${data.level}</span></div>
        <div>Strength: <span class="shiba-strength">${parseFloat (data.strength) / 10}</span></div>
        <div>Agility: <span class="shiba-agility">${parseFloat (data.agility) / 10}</span></div>
        <div>Dexterity: <span idclass="shiba-dexterity">${parseFloat (data.dexterity) / 10}</span></div>
        <button id="btn-level-up-${id}" class="btn btn-primary btn-block">Level up</button>
    </div>
    </div>`;

    let element = $.parseHTML(card);
    $("#shibas-row").append(element);

    $(`#btn-level-up-${id}`).click( () => { 
        levelUp(id);
    }) 
}

async function getContract(){
    let abi = await getAbi();
    return new web3.eth.Contract(abi, CONTRACT_ADRESS);
}

function getAbi(){
    return new Promise((res)=>{
        $.getJSON("Token.json", ((json) => {
            res(json.abi);
        }))
    })
}

async function levelUp(shibaId) {
    let contract = await getContract();
    contract.methods.levelUp(shibaId).send({from: ethereum.selectedAddress})
        .on("receipt", (() => {
            console.log("level up");
            renderGame();
        }));
}

async function buyShiba(){
    let contract = await getContract();
    contract.methods.buyShiba().send({from: ethereum.selectedAddress})
        .on("receipt", (() => {
            console.log("bought");
            renderGame();
        }));
}

$("#btn-buy-shiba").click( () => { 
    buyShiba();
})

init();